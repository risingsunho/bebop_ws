<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright (C) 2014 Parrot SA

    Redistribution and use in source and binary forms, with or without
    modification, are permitted provided that the following conditions
    are met:
    * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in
      the documentation and/or other materials provided with the
      distribution.
    * Neither the name of Parrot nor the names
      of its contributors may be used to endorse or promote products
      derived from this software without specific prior written
      permission.

    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
    "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
    FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
    COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
    INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
    BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
    OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
    AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
    OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
    OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
    SUCH DAMAGE.
-->

<!--
 Important notes :
 ALWAYS ADD NEW THINGS AT THE END OF THE PARENT TAG !
 NEVER MODIFY EXISTING class/command/arg !

 Comments are mandatory for all classes/commands/args
 For each comment : 1st line will be used as brief (if applicable)
 Other lines will be used as complete desc

 How to add a new class :
 <class name="MyNewClassName" >           | No spaces ! [A-Za-z0-9_]
 Comment about the class                | Inlcuded in Doxygen doc
 <cmd> ... </cmd>                       | List of commands
 <cmd> ... </cmd>
 </class>

 How to add a new command (without args) to a class :
 <cmd name="MyNewCommandName" >           | No spaces ! [A-Za-z0-9_]
 Comment about the command              | Included in Doxygen doc
 </cmd>

 How to add a new command (with args) to a class :
 <cmd name="MyNewCommandWithArgs" >       | No spaces ! [A-Za-z0-9_]
 Comment about the command              | Included in Doxygen doc
 <arg name="argName" type="argType" >   | Repeat for each arg
 Comment about the arg                | argName must be a valid C variable name
 </arg>                                 | argType must be a valid type (see below)
 ...                                    | Comment included in Doxygen doc
 </cmd>

 List of valid types (associated C type) :
 -  i8 /  u8 : signed/unsigned  8 bit integer ([u]int8_t)
 - i16 / u16 : signed/unsigned 16 bit integer ([u]int16_t)
 - i32 / u32 : signed/unsigned 32 bit integer ([u]int32_t)
 - i64 / u64 : signed/unsigned 64 bit integer ([u]int64_t)
 -     float : IEEE-754 single precision floating point number (float)
 -    double : IEEE-754 double precision floating point number (double)
 -    string : NULL-terminated UTF-8 String. (char *)
 -->


<feature name="drone_manager" id="137">
    Commands related to the drone_manager feature

    <enums>
      <enum name="security">
        The security of the drone network.
        <value name="none">
          No security.
        </value>
	<value name="wpa2">
	  wpa2 (passphrase) security
	</value>
      </enum>

      <enum name="connection_state">
        The state of the connection to a drone.
        <value name="idle">
          The drone manager do nothing.
        </value>
        <value name="searching">
          The drone manager is searching for a drone.
        </value>
        <value name="connecting">
          The drone manager is connecting to a drone.
        </value>
        <value name="connected">
          The drone manager is connected to a drone.
        </value>
        <value name="disconnecting">
	  The drone manager is finishing the connection with the drone before taking further action.
        </value>
      </enum>
    </enums>

    <msgs>

      <!-- Drone list handling -->
      <cmd name="discover_drones" id="1">
        <comment
            title="Request the drone list"
            desc="Request the drone list."
            support="090f"
            result="The drone manager will answer with a list of drone_list_items"/>
      </cmd>
      <evt name="drone_list_item" id="2" type="MAP_ITEM:serial">
        <comment
            title="Drone list element"
            desc="Drone list element."
            support="090f"
            triggered="Sent after a discover_drones command is received"/>
        <arg name="serial" type="string">
          Serial number of the drone.
        </arg>
        <arg name="model" type="u16">
          Model of the drone.
        </arg>
        <arg name="name" type="string">
          Name (SSID) of the drone.
        </arg>
        <arg name="connection_order" type="u8">
          0 if the drone is unknwon (never connected).
          Else, order of last connection (1 = most recent)
        </arg>
        <arg name="active" type="u8">
          1 if the drone is active (the drone manager tries to connect or is connected to it)
          0 if the drone is not the active one.
        </arg>
        <arg name="visible" type="u8">
          1 if the drone is currently visible, 0 otherwise.
        </arg>
        <arg name="security" type="enum:security"/>
        <arg name="has_saved_key" type="u8">
          1 if the drone manager has a saved security key for the drone, 0 otherwise.
          If security is not none, and this value is 0, then the controller should prompt the user for a passphrase when sending a connect.
        </arg>
        <arg name="rssi" type="i8">
          The drone rssi. The value is meaningless if the drone is not visible.
        </arg>
        <arg name="list_flags" type="bitfield:u8:list_flags"/>
      </evt>

      <!-- Connection handling -->
      <cmd name="connect" id="3">
        <comment
            title="Connect to a drone"
            desc="Request connection to a specific drone. Override the auto-selected drone."
            support="090f"
            result="The drone manager will send an update of its connection_state, if relevant"/>
        <arg name="serial" type="string">
          Serial number of the drone.
        </arg>
        <arg name="key" type="string">
          Security key to use. Ignored if drone security is none.
          If the drone manager has a saved key for the drone, pass an empty string to use it
        </arg>
      </cmd>
      <cmd name="forget" id="4">
        <comment
            title="Forget a drone"
            desc="Forget the given drone. If the drone is the selected one, the auto-selection will run again."
            support="090f"
            result="If the drone was the active one, a new one will be autoselected, and connection_state update will be sent as needed.
                    Otherwise, no answer will be sent from the drone manager"/>
        <arg name="serial" type="string">
          Serial number to forget.
        </arg>
      </cmd>
      <evt name="connection_state" id="5">
        <comment
            title="State of the connection"
            desc="State of the connection."
            support="090f"
            triggered="Sent when the state changes.
                       If the state is searching, all informations about the drone will refer to the last connected drone.
                       Otherwise, these informations will refer to the active drone."/>
        <arg name="state" type="enum:connection_state"/>
        <arg name="serial" type="string">
          Serial number of the drone.
        </arg>
        <arg name="model" type="u16">
          Model of the drone.
        </arg>
        <arg name="name" type="string">
          Name (SSID) of the drone.
        </arg>
      </evt>
      <evt name="authentication_failed" id="6">
        <comment
            title="Authentication failed"
            desc="Wrong WPA password"
            support="090f"
            triggered="Try to connect to a WPA protected drone with a wrong password"/>
        <arg name="serial" type="string">
          Serial number of the drone.
        </arg>
        <arg name="model" type="u16">
          Model of the drone.
        </arg>
        <arg name="name" type="string">
          Name (SSID) of the drone.
        </arg>
      </evt>
      <evt name="connection_refused" id="7">
        <comment
            title="Connection refused"
            desc="Connection refused by the drone because another peer is already connected."
            support="090f"
            triggered="Try to connect to a drone where another peer is already connected to."/>
        <arg name="serial" type="string">
          Serial number of the drone.
        </arg>
        <arg name="model" type="u16">
          Model of the drone.
        </arg>
        <arg name="name" type="string">
          Name (SSID) of the drone.
        </arg>
      </evt>
    </msgs>
</feature>
